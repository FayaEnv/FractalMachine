class WordsDispatcher
        {
            public class Word
            {
                public string String;
                public bool IsAlphanumeric;
            }

            public delegate void OnDispatchDelegate(Word Word);
            public OnDispatchDelegate OnDispatch;

            public CharType prevCharType;
            List<string> strings = new List<string>();
            string curString = "";

            public void Push(char Char)
            {
                var charType = new CharType(Char);

                if(prevCharType != null)
                {
                    if(charType.IsAlphanumeric != prevCharType.IsAlphanumeric)
                    {
                        Flush();
                    }
                }

                curString += Char;
                prevCharType = charType;

                // check for corrispondece
            }

            public void Flush()
            {
                var word = new Word();
                word.String = curString;
                word.IsAlphanumeric = prevCharType.IsAlphanumeric;

                OnDispatch(word);
                curString = "";
            }

        }

        class Switches
        {
            Dictionary<string, bool> _abc = new Dictionary<string, bool>();

            public delegate void OnSwitchChangedDelegate(bool Value);
            Dictionary<string, OnSwitchChangedDelegate> _delegates = new Dictionary<string, OnSwitchChangedDelegate>();            

            public bool this[string property]
            {
                get
                {
                    bool o;
                    if (_abc.TryGetValue(property, out o))
                    {
                        return o;
                    }

                    return default;
                }

                set
                {
                    bool o;
                    if (_abc.TryGetValue(property, out o) && o != value)
                    {
                        OnSwitchChangedDelegate del;
                        if (_delegates.TryGetValue(property, out del))
                        {
                            del(o);
                        }
                    }

                    _abc[property] = value;
                }
            }

            public void OnSwitchChanged(string Switch, OnSwitchChangedDelegate Delegate)
            {
                _delegates.Add(Switch, Delegate);
            }
        }